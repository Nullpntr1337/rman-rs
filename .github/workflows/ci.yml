name: CI

permissions:
  contents: read

on: [pull_request, push]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.RMAN_SCHEMA_PAT }}
          submodules: true

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Try getting flatc from cache
        uses: actions/cache@v3
        id: cache-flatc
        with:
          path: ~/.local/bin
          key: ${{ runner.os }}-build-flatc-clang12-23-1-21

      - name: Fetch latest flatc release
        if: steps.cache-flatc.outputs.cache-hit != 'true'
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: google/flatbuffers
          version: tags/v23.1.21
          file: Linux.flatc.binary.clang++-12.zip
          target: flatc/flatc-zipped.zip

      - name: Unzip fetched release
        if: steps.cache-flatc.outputs.cache-hit != 'true'
        run: unzip flatc/flatc-zipped.zip -d ~/.local/bin

      - name: cargo check
        run: cargo check

  fmt:
    name: Check style
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.RMAN_SCHEMA_PAT }}
          submodules: true

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: cargo fmt -- --check
        run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.RMAN_SCHEMA_PAT }}
          submodules: true

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Try getting flatc from cache
        uses: actions/cache@v3
        id: cache-flatc
        with:
          path: ~/.local/bin
          key: ${{ runner.os }}-build-flatc-clang12-23-1-21

      - name: Fetch latest flatc release
        if: steps.cache-flatc.outputs.cache-hit != 'true'
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: google/flatbuffers
          version: tags/v23.1.21
          file: Linux.flatc.binary.clang++-12.zip
          target: flatc/flatc-zipped.zip

      - name: Unzip fetched release
        if: steps.cache-flatc.outputs.cache-hit != 'true'
        run: unzip flatc/flatc-zipped.zip -d ~/.local/bin

      - name: cargo clippy --all-features -- -D warnings
        run: cargo clippy --all-features -- -D warnings
